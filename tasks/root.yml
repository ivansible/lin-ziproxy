---
- name: install ziproxy package
  apt:
    name: ziproxy
    state: present
  register: ziproxy_apt_result
  tags: srv_ziproxy_install


- name: create ziproxy configuration
  template:
    src: ziproxy.conf.j2
    dest: /etc/ziproxy/ziproxy.conf
    owner: ziproxy
    group: ziproxy
    mode: 0640
    backup: true
  notify: restart ziproxy service
  tags: srv_ziproxy_config

- name: setup ziproxy authentication
  copy:
    dest: /etc/ziproxy/http.passwd
    content: "{{ ziproxy_userpass }}"
    owner: ziproxy
    group: ziproxy
    mode: 0640
    backup: false
  when: ziproxy_userpass != '' # noqa 602
  notify: restart ziproxy service
  tags: srv_ziproxy_config

- name: upload ziproxy lists
  copy:
    src: "{{ item }}"
    dest: /etc/ziproxy/
    owner: ziproxy
    group: ziproxy
    mode: 0644
  loop:
    - deny.list
    - replace_ct.list
  notify: restart ziproxy service
  tags: srv_ziproxy_config


- name: temporarily reset ziproxy service after fresh install
  # note: this step is a workaround.
  #       without this reset the service might end up disabled.
  systemd:
    name: ziproxy
    state: stopped
    enabled: false
    daemon_reload: true
  when: ziproxy_apt_result is changed
  tags: srv_ziproxy_service

- name: activate ziproxy service
  systemd:
    name: ziproxy
    state: started
    enabled: true
    daemon_reload: true
  tags: srv_ziproxy_service


- name: open ziproxy port in ufw
  ufw:
    port: "{{ ziproxy_port |string }}"
    proto: tcp
    rule: allow
  no_log: "{{ hide_secrets |bool }}"
  when: lin_firewall == 'ufw'
  tags:
    - srv_ziproxy_firewall

- name: open ziproxy port for exteranl/internal hosts in ferm
  ferm_port:
    port: "{{ ziproxy_port }}"
    proto: tcp
    zone: "{{ ziproxy_direct |bool |ternary('external','internal') }}"
    solo_zone: true
    comment: ziproxy
  when: lin_firewall == 'ferm'
  tags:
    - skip_ansible_lint
    - srv_ziproxy_firewall

- name: flush handlers
  meta: flush_handlers
...
